---

- name: Gather raw system info
  changed_when: false
  raw: |
    if [ -f /etc/os-release ]; then
        # freedesktop.org and systemd
        . /etc/os-release
        OS=${NAME%%\ Linux}
        VER=${VERSION_ID%%\ \(Core\)}
    elif type lsb_release >/dev/null 2>&1; then
        # linuxbase.org
        OS=$(lsb_release -si)
        VER=$(lsb_release -sr)
    elif [ -f /etc/lsb-release ]; then
        # For some versions of Debian/Ubuntu without lsb_release command
        . /etc/lsb-release
        OS=$DISTRIB_ID
        VER=$DISTRIB_RELEASE
    elif [ -f /etc/debian_version ]; then
        # Older Debian/Ubuntu/etc.
        OS="Debian"
        VER=$(cat /etc/debian_version)
    elif [ -f /etc/redhat-release ]; then
        # Older Red Hat, CentOS, etc.
        OS="RedHat"
        VER=$(cat /etc/redhat-release | tr -dc '0-9.')
    else
        # Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
        OS=$(uname -s)
        VER=$(uname -r)
    fi
    echo "$OS|$VER"
  register: _ansible_bootstrap_system_info_result

- name: Set system info facts
  set_fact:
    ansible_bootstrap_facts_os_name: "{{ (_ansible_bootstrap_system_info_result.stdout.split('|'))[0] | trim }}"
    ansible_bootstrap_facts_os_version: "{{ (_ansible_bootstrap_system_info_result.stdout.split('|'))[1] | trim }}"

- debug: msg="Detected {{ ansible_bootstrap_facts_os_name }} {{ ansible_bootstrap_facts_os_version }}"

- name: Force override python version to 3.x on systems 2.x is not available
  set_fact:
    ansible_bootstrap_python_version: 3
  when: >
    ansible_bootstrap_facts_os_name == "CentOS"
    and ansible_bootstrap_facts_os_version | version('8', '>=')

- name: Force override ansible python interpreter
  set_fact:
    ansible_python_interpreter: /usr/bin/python{{ ansible_bootstrap_python_version }}
  when: ansible_bootstrap_with_override_ansible_interpreter | bool

- name: Test if Python is installed
  raw: |
    PYTHON_VERSION=$(python -V 2>&1)
    if [[ $PYTHON_VERSION == *"not found"* ]]; then
      PYTHON_VERSION=$(python2 -V 2>&1)
      if [[ $PYTHON_VERSION == *"not found"* ]]; then
        PYTHON_VERSION=$(python3 -V 2>&1)
        if [[ $PYTHON_VERSION == *"not found"* ]]; then
          PYTHON_VERSION="not found"
        fi
      fi
    fi
    echo $PYTHON_VERSION
  register: python_version
  changed_when: false
  failed_when: false
